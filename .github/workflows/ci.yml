name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json') }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ hashFiles('package.json') }}-
            ${{ runner.OS }}-build-
      - run: npm install
      - run: npm run build
      - run: npm run test
      - run: npm run lint:report
        continue-on-error: true
      - uses: actions/upload-artifact@v3
        with:
          name: result
          path: |
            eslint_report.json
      - run: npm run pack
        if: github.event_name != 'pull_request'
      - name: Create Pull Request
        if: github.event_name != 'pull_request'
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.MEILCLI_BOT }}
          commit-message: 'update actions'
          title: 'update actions'
          labels: 'Action'
          assignees: 'MeilCli'
          reviewers: 'MeilCli'
          branch: 'update/action'
  danger:
    runs-on: ubuntu-latest
    if: github.event_name  == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: npm install
        run: |
          npm install
        env:
          CI: true
      - uses: MeilCli/danger-action@v5
        with:
          plugins_file: 'Gemfile'
          danger_file: 'Dangerfile'
          danger_id: 'danger-pr'
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  approve:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    steps:
      - id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
      - if: steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.MEILCLI_BOT }}
